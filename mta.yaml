_schema-version: "3.1"
ID: triporderproject
description: The cloud based foundation to support trip details
version: 1.0.0
modules:

- name: triporder-broker
  type: nodejs 
  path: srv-broker
  parameters:
      memory: 128M
      disk-quota: 512M
  properties:
      SBF_ENABLE_AUDITLOG: false
      SBF_CREDENTIALS_PROVIDER_SERVICE: uaa_triporder
      SBF_BROKER_CREDENTIALS_HASH: "{ \"~{triporder-broker-credentials/user}\": \"~{triporder-broker-credentials/hash}\" }"
  build-parameters:
      ignore: [".gitignore", manifest.yml, "*.mtaext", "mta.*", "*.mtar", ".mta/"]
  requires:
    - name: triporder-broker-credentials
    - name: uaa_triporder
    - name: triporder_html_repo_host
    # - name: flights-audit
    - name: srv-api
      properties:
         SBF_SERVICE_CONFIG:
            triporder-srv:
              extend_credentials:
                shared:
                  vendor: LegState Engineering
                  endpoints:
                    root: ~{srv-url}
                per_plan:
                  default:
                    url: ~{srv-url}
                    grant_type: user_token
                  api:
                    url: ~{srv-url}
                    grant_type: client_credentials
              extend_xssecurity:
                shared:
                  oauth2-configuration:
                    credential-types: [binding-secret]
                per_plan:
                  default:
                    authorities: [$XSMASTERAPPNAME.User,$XSMASTERAPPNAME.API_User,$XSMASTERAPPNAME.Admin]
                  api:
                    authorities: [$XSMASTERAPPNAME.API_User]


- name: triporder-srv
  type: nodejs
  path: gen/srv
  parameters:
    memory: 128M
    disk-quota: 512M
  requires:
  #- name: triporder-db
  - name: uaa_triporder
  - name: triporder-smc
  - name: triporder-reg
  provides:
  - name: srv-api
    properties:
      srv-url: ${default-url}


- name: triporder_ui_deployer
  type: com.sap.application.content
  path: ui.deployer
  requires:
  - name: triporder_html_repo_host
    parameters:
      content-target: true

  build-parameters:
    build-result: resources
    requires:
    - artifacts:
      - accommodation.zip
      name: accommodation
      target-path: resources/
    - artifacts:
      - catering.zip
      name: catering
      target-path: resources/
    - artifacts:
      - passengers.zip
      name: passengers
      target-path: resources/
    - artifacts:
      - route_plan.zip
      name: route_plan
      target-path: resources/
    - artifacts:
      - cargocargo.zip
      name: cargocargo
      target-path: resources/
    - artifacts:
      - tripdetails.zip
      name: tripdetails
      target-path: resources/
    - artifacts:
      - tripcollated.zip
      name: tripcollated
      target-path: resources/
    - artifacts:
      - fas.zip
      name: fas
      target-path: resources/
    - artifacts:
      - tripinput.zip
      name: tripinput
      target-path: resources/
    - artifacts:
      - airports.zip
      name: airports
      target-path: resources/
    - artifacts:
      - carriers.zip
      name: carriers
      target-path: resources/
    - artifacts:
      - triplog.zip
      name: triplog
      target-path: resources/  
    - artifacts:
      - countries.zip
      name: countries
      target-path: resources/
    - artifacts:
      - currencies.zip
      name: currencies
      target-path: resources/
    - artifacts:
      - languages.zip
      name: languages
      target-path: resources/
    - artifacts:
      - legstates.zip
      name: legstates
      target-path: resources/
      
- name: triporder-approuter
  type: approuter.nodejs
  path: triporder-approuter
  properties:
    TENANT_HOST_PATTERN: ^(.*)-${space}-${app-name}.${default-domain}
    SEND_XFRAMEOPTIONS: false
  requires:
  - name: triporder_html_repo_runtime
  - name: uaa_triporder
  - name: srv-api
  - name: triporder-destination
  parameters:
    disk-quota: 256M
    memory: 256M

- name: accommodation
  type: html5
  path: app/accommodation
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []

- name: catering
  type: html5
  path: app/catering
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: passengers
  type: html5
  path: app/passengers
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
    
- name: route_plan
  type: html5
  path: app/route_plan
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: cargocargo
  type: html5
  path: app/cargo
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: tripdetails
  type: html5
  path: app/tripdetails
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
    
- name: tripcollated
  type: html5
  path: app/tripcollated
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []

- name: fas
  type: html5
  path: app/fas
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []

- name: tripinput
  type: html5
  path: app/tripinput
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
    
- name: airports
  type: html5
  path: app/airports
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: carriers
  type: html5
  path: app/carriers
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: triplog
  type: html5
  path: app/triplog
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []  
- name: countries
  type: html5
  path: app/countries
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: currencies
  type: html5
  path: app/currencies
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: languages
  type: html5
  path: app/languages
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []
- name: legstates
  type: html5
  path: app/legstates
  build-parameters:
    build-result: dist
    builder: custom
    commands:
    - npm install
    - npm run build:cf
    supported-platforms: []

resources:
- name: triporder-broker-credentials 
  properties:
    user: "triporder-sbf-user"
    hash: "sha256:5mR4kbvPF6C+1FBmhyCU6laKgIvvIjmDfsgZSsayo5k=:m6i1Cg8GxgK9gGhpVg1tsljudSvGRJJ06HOfGJqj928="

- name: triporder-destination
  type: org.cloudfoundry.managed-service
  parameters:
    service: destination 
    service-plan: lite
- name: triporder-smc
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      acquireTimeoutMillis: 9000
      polling_timeout_seconds: 480
    polling_timeout_seconds: 240
    service: service-manager
    service-plan: container
  requires:
  - name: uaa_triporder

- name: triporder-reg
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      appUrls:
        callbackTimeoutMillis: 300000
        onSubscription: ~{srv-api/srv-url}/mtx/v1/provisioning/tenant/{tenantId}
        onSubscriptionAsync: false
        onUnSubscriptionAsync: false
      category: LegState Engineering
      description: The cloud based foundation to support trip details
      displayName: Trip Record
      xsappname: triporder-xsapp
    service: saas-registry
    service-plan: application
  requires:
  - name: uaa_triporder
  - name: srv-api


- name: triporder-db
  type: com.sap.xs.hdi-container
  parameters:
    service: hana
    service-plan: hdi-shared
  properties:
    hdi-service-name: ${service-name}
- name: triporder_html_repo_runtime
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-plan: app-runtime
- name: uaa_triporder
  type: org.cloudfoundry.managed-service
  parameters:
    config:
      tenant-mode: shared
      xsappname: triporder-xsapp
    path: ./xs-security.json
    service: xsuaa
    service-plan: broker
- name: triporder_html_repo_host
  type: org.cloudfoundry.managed-service
  parameters:
    service: html5-apps-repo
    service-plan: app-host
parameters:
  deploy_mode: html5-repo
  enable-parallel-deployments: true
build-parameters:
  before-all:
  - builder: custom
    commands:
    - npm install --production
    - npx -p @sap/cds-dk cds build --production